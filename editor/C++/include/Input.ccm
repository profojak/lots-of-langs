module;

#include <string>

export module Input;

export namespace editor {

struct Line {
    /*! @brief Characters. */
    std::string characters;
    /*! @brief Rendered characters. */
    std::string rendered_characters;

    /**
     * @brief Convert cursor X coordinate to rendered X coordinate.
     * @param cursor_x Cursor X coordinate.
     * @return Rendered X coordinate.
     */
    auto CursorXToRenderedX(int cursor_x) noexcept -> int;

    /*! @brief Update after modification. */
    void Update() noexcept;

    /**
    * @brief Insert character.
    * @param at Position.
    * @param c Character.
    */
    void InsertChar(int at, int c) noexcept;

    /**
    * @brief Append string.
    * @param str String.
    */
    void AppendString(const std::string& str) noexcept;

    /**
    * @brief Delete character.
    * @param at Position.
    */
    void DeleteChar(int at) noexcept;
};

/**
 * @brief Insert line.
 * @param at Position.
 * @param str String.
 */
void InsertLine(int at, const std::string& str) noexcept;

/**
 * @brief Delete line.
 * @param at Position.
 */
void DeleteLine(int at) noexcept;

/**
 * @brief Insert character.
 * @param c Character.
 */
void InsertChar(int c) noexcept;

/*! @brief Insert new line. */
void InsertNewLine() noexcept;

/*! @brief Delete character. */
void DeleteChar() noexcept;

/**
 * @brief Ask user for text input.
 * @param prompt Prompt.
 * @return Text.
 */
std::string Prompt(const std::string& prompt);

/**
 * @brief Move cursor.
 * @param key Key code.
 */
void MoveCursor(int key) noexcept;

/*! @brief Process key press. */
void ProcessKeypress() noexcept;

} // namespace editor
