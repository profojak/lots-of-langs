module;

#include <chrono>
#include <optional>

#include <termios.h>

import Input;

export module Terminal;

export namespace editor {

/*! @brief Editor. */
extern class Editor {
public:
    /*! @brief Cursor X coordinate. */
    int cursor_x;
    /*! @brief Cursor Y coordinate. */
    int cursor_y;
    /*! @brief Rendered cursor X coordinate. */
    int rendered_x;
    /*! @brief Screen rows. */
    int screen_rows;
    /*! @brief Screen columns. */
    int screen_cols;
    /*! @brief Row offset. */
    int row_offset;
    /*! @brief Column offset. */
    int col_offset;
    /*! @brief Number of lines in file. */
    int lines_count;
    /*! @brief Lines. */
    std::vector<Line> lines;
    /*! @brief File dirty flag. */
    int dirty;
    /*! @brief Filename. */
    std::string filename;
    /*! @brief Status message. */
    std::string status_message;
    /*! @brief Status message time. */
    std::time_t status_time;
    /*! @brief Original termios configuration. */
    struct termios original_termios;

    /*! @brief Default constructor. */
    Editor() noexcept;

    /*! @brief Destructor. */
    ~Editor() noexcept;
} editor;

/*! @brief Key codes. */
enum Key {
    BACKSPACE = 127,
    ARROW_UP = 1000,
    ARROW_DOWN,
    ARROW_LEFT,
    ARROW_RIGHT,
    PAGE_UP,
    PAGE_DOWN,
    HOME,
    END,
    DELETE
};

/**
 * @brief Read key.
 * @return Key code.
 */
auto ReadKey() noexcept -> int;

/**
 * @brief Get cursor position.
 * @return Rows and columns.
 */
auto GetCursorPosition() noexcept -> std::optional<std::pair<int, int>>;

/**
 * @brief Get window size.
 * @return Rows and columns.
 */
auto GetWindowSize() noexcept -> std::optional<std::pair<int, int>>;

} // namespace editor
